<?xml version="1.0" encoding="utf-8"?>
<!--
/**
* VIDEOSOFTWARE.PRO
* Copyright 2010 VideoSoftware.PRO
* All Rights Reserved.
*
* This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License
*  as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
*  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
*  See the GNU General Public License for more details.
*  You should have received a copy of the GNU General Public License along with this program.
*  If not, see <http://www.gnu.org/licenses/>.
* 
*  Author: Our small team and fast growing online community at videosoftware.pro
*/
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" initialize="init()">
	<mx:HTTPService id="srv" url="config.php?setts" fault="onFault()" result="onResult(event)"
		resultFormat="e4x" />
		
	<mx:Script>
		<![CDATA[
			import jabbercam.manager.Red5CCUserManager;
			import mx.rpc.events.ResultEvent;
			
			private var connectUrl : String;
			private var red5ConnectUrlB1 : String;
			private var red5ConnectUrlB2 : String;
			
			private var currentUrlTested : String;
			
			private var red5TestConnection : NetConnection;
			
			private function init() : void {
				srv.send();
			}
			
			private function onResult(event : ResultEvent) : void {
				this.connectUrl = event.result.red5ConnectUrl;
				
				if(event.result.hasOwnProperty('red5ConnectUrlB1'))
				red5ConnectUrlB1 = event.result.red5ConnectUrlB1;
				
				if(event.result.hasOwnProperty('red5ConnectUrlB2'))
				red5ConnectUrlB2 = event.result.red5ConnectUrlB2;
				
				testRed5Server();
			}
			
			private function onFault() : void {
				failedConnecting();
			}
			
			private function testRed5Server() : void {
        	if(!red5TestConnection) {
        		red5TestConnection = new NetConnection();
        		red5TestConnection.addEventListener(NetStatusEvent.NET_STATUS, onRed5TestConnectionStatus);
        		red5TestConnection.client = new Red5CCUserManager();
        	}
        	
        	if(!currentUrlTested && connectUrl) {
        		currentUrlTested = connectUrl;
        	} else if(currentUrlTested == connectUrl && red5ConnectUrlB1) {
        		currentUrlTested = red5ConnectUrlB1;
        	} else if(currentUrlTested == red5ConnectUrlB1 && red5ConnectUrlB2) {
        		currentUrlTested = red5ConnectUrlB2;
        		
        	} else {
        		failedConnecting();
        		return;
        	}
        	
        	red5TestConnection.connect(currentUrlTested, "JabberCamApp");
        }
        
        private function onRed5TestConnectionStatus(event : NetStatusEvent) : void {
        	switch(event.info.code) {
        		case "NetConnection.Connect.Success":
        		
        			red5TestConnection.close();
        			red5TestConnection.removeEventListener(NetStatusEvent.NET_STATUS, 
        				onRed5TestConnectionStatus);
        			red5TestConnection = null;
        			
        			successConnecting();
        			break;
        			
        		case "NetConnection.Connect.Rejected":
        		case "NetConnection.Connect.Failed":
        			testRed5Server();
        	}
        }
        
        private function failedConnecting() : void {
        	ExternalInterface.call("failedConnecting");
        }
        
        private function successConnecting() : void {
        	ExternalInterface.call("successConnecting", currentUrlTested);
        }
		]]>
	</mx:Script>
</mx:Application>
