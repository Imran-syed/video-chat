<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:crc="com.jabbercam.crc.*" layout="absolute" width="100%" height="100%"
				applicationComplete="application1_applicationCompleteHandler(event)" backgroundGradientAlphas="0,0" backgroundAlpha="0">
	<fx:Script>
		<![CDATA[
			import com.jabbercam.crc.CookieManager;
			import com.jabbercam.crc.Status;
			
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.SliderEvent;

			protected function application1_applicationCompleteHandler(event:FlexEvent):void
			{
				loadConfig('services/config.php?setts');
			}


			protected function micSlider_changeHandler(event:SliderEvent):void
			{
				crc::changeMic(Microphone.getMicrophone(microphones.selectedIndex));
			}


			protected function cameras_changeHandler(event:ListEvent):void
			{
				crc::changeCamera(Camera.getCamera(cameras.selectedIndex.toString()));
			}


			protected function microphones_changeHandler(event:ListEvent):void
			{
				crc::setMicrophoneGain(micSlider.value);
			}


			protected function speakerSlider_changeHandler(event:SliderEvent):void
			{
				crc::setSpeakerVolume(speakerSlider.value);
			}


			protected function startBut_clickHandler(event:MouseEvent):void
			{
				if(startBut.label.toLowerCase() == "switching")
					return; // TODO: fix this otherwise
				crc::startNext();
			}


			protected function stopBut_clickHandler(event:MouseEvent):void
			{
				crc::stop();
			}


			protected function textInput_enterHandler(event:FlexEvent):void
			{
				putMessage(textInput.text, "Me");
				sendMessage(textInput.text);
				textInput.text = "";
			}


			protected function mvC_changeHandler(event:Event):void
			{
				CookieManager.instance.saveMyVideoSettings(mvC.getRect(videoContainer));
				CookieManager.instance.flush();
			}


			protected function ovC_changeHandler(event:Event):void
			{
				CookieManager.instance.savePartnerVideoSettings(ovC.getRect(videoContainer));
				CookieManager.instance.flush();
			}


			protected function ovC_creationCompleteHandler(event:FlexEvent):void
			{
				var cm : CookieManager = CookieManager.instance;
				ovC.x = cm.partnerVideo.x;
				ovC.y = cm.partnerVideo.y;
				ovC.width = cm.partnerVideo.width;
				ovC.height = cm.partnerVideo.height;
			}


			protected function mvC_creationCompleteHandler(event:FlexEvent):void
			{
				var cm : CookieManager = CookieManager.instance;
				mvC.x = cm.myVideo.x;
				mvC.y = cm.myVideo.y;
				mvC.width = cm.myVideo.width;
				mvC.height = cm.myVideo.height;
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script source="CRC.as" />
	<fx:Style source="../assets/style.css"></fx:Style>
	<mx:VDividedBox x="0" y="0" width="100%" height="100%" >
		<mx:Canvas width="100%" height="100%" id="videoContainer">
			<mx:Canvas width="100%" height="100%">
				<crc:ManipulatedComponent minWidth="160" minHeight="120" keepAspect="true"
										  change="ovC_changeHandler(event)" creationComplete="ovC_creationCompleteHandler(event)" id="ovC">
					<crc:VideoRenderer width="100%" height="100%" backgroundColor="#000000"
									   id="otherVideo"/>
				</crc:ManipulatedComponent>
				<crc:ManipulatedComponent minWidth="160" minHeight="120" keepAspect="true"
										  change="mvC_changeHandler(event)" creationComplete="mvC_creationCompleteHandler(event)" id="mvC">
					<crc:VideoRenderer width="100%" height="100%" backgroundColor="#000000"
									   camera="{Camera.getCamera(cameras.selectedIndex.toString())}"/>
				</crc:ManipulatedComponent>
			</mx:Canvas>
			<mx:VBox bottom="0" width="100%" horizontalAlign="center">
				<mx:HBox>
					<mx:HSlider width="100" minimum="0" maximum="100" value="{microphoneVolume}"
								change="micSlider_changeHandler(event)" id="micSlider" />
					<mx:ComboBox id="cameras" width="150" dataProvider="{Camera.names}" selectedIndex="0"
								 change="cameras_changeHandler(event)" />
					<mx:ComboBox id="microphones" width="150" dataProvider="{Microphone.names}" selectedIndex="0"
								 change="microphones_changeHandler(event)" />
					<mx:HSlider width="100" minimum="0" maximum="100" value="{speakerVolume}"
								change="speakerSlider_changeHandler(event)" id="speakerSlider" />
				</mx:HBox>
				<mx:Label text="Users online: {numUsersOnline}" />
				<mx:HBox>
					<mx:Button id="startBut" width="100" click="startBut_clickHandler(event)"
							   label="Initializing" enabled="{manager &amp;&amp; Boolean(manager.status &amp; Status.READY)
							   	&amp;&amp; !Boolean(manager.status &amp; Status.CALLING)}"/>
					<mx:Button id="stopBut" width="100" click="stopBut_clickHandler(event)"
							   enabled="{manager &amp;&amp; (Boolean((manager.status &amp; Status.STARTED) >> 3) || 
							   Boolean(manager.status &amp; Status.CALLING))}"
							   label="Stop"/>
				</mx:HBox>
			</mx:VBox>
		</mx:Canvas>
		<mx:VBox width="100%" height="60%" id="chatContainer" horizontalAlign="center">
			<mx:TextInput id="textInput" width="500" height="30" enter="textInput_enterHandler(event)" enabled="{Boolean((manager.status &amp; Status.CONNECTED_TO_PEER)>>4)}" />
			<mx:TextArea editable="false" id="textOut" width="500" height="63" />
			<mx:LinkButton label="videosoftware.pro" click="onSocialButtonClick('http://www.videosoftware.pro')" buttonMode="true" right="0" styleName="vspro_url" skin="{null}" alpha="0.5"/>
			<!--<mx:HBox width="100%" bottom="0">
				<mx:Button id="changeBackground" label="Change background" click="changeBackground_clickHandler(event)" left="0" />
			</mx:HBox>-->
		</mx:VBox>
	</mx:VDividedBox>
</mx:Application>
